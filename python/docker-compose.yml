version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: restaurant_db
    environment:
      POSTGRES_DB: restaurant_system
      POSTGRES_USER: restaurant_user
      POSTGRES_PASSWORD: restaurant_password
      POSTGRES_INITDB_ARGS: "--auth-host=scram-sha-256"
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init-db.sql:/docker-entrypoint-initdb.d/init-db.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U restaurant_user -d restaurant_system"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - restaurant_network

  # Redis for caching and sessions (optional)
  redis:
    image: redis:7-alpine
    container_name: restaurant_redis
    ports:
      - "6379:6379"
    command: redis-server --appendonly yes --requirepass redis_password
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "--raw", "incr", "ping"]
      interval: 30s
      timeout: 3s
      retries: 5
    networks:
      - restaurant_network

  # FastAPI Application
  api:
    build: .
    container_name: restaurant_api
    ports:
      - "8000:8000"
    environment:
      - DATABASE_URL=postgresql://restaurant_user:restaurant_password@postgres:5432/restaurant_system
      - REDIS_URL=redis://:redis_password@redis:6379/0
      - DEBUG=true
      - ENVIRONMENT=development
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      - .:/app
      - /app/__pycache__
    command: uvicorn app.main:app --host 0.0.0.0 --port 8000 --reload
    networks:
      - restaurant_network
    restart: unless-stopped

  # pgAdmin for database management (optional)
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: restaurant_pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@restaurant.com
      PGADMIN_DEFAULT_PASSWORD: admin_password
      PGADMIN_CONFIG_SERVER_MODE: 'False'
    ports:
      - "5050:80"
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    depends_on:
      - postgres
    networks:
      - restaurant_network

volumes:
  postgres_data:
  redis_data:
  pgadmin_data:

networks:
  restaurant_network:
    driver: bridge